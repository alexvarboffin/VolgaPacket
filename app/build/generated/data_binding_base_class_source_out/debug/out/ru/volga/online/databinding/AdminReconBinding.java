// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class AdminReconBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout reBanButt;

  @NonNull
  public final Button reExitButt;

  @NonNull
  public final ConstraintLayout reFlipButt;

  @NonNull
  public final ConstraintLayout reFreezeButt;

  @NonNull
  public final TextView reIdText;

  @NonNull
  public final ConstraintLayout reJailButt;

  @NonNull
  public final ConstraintLayout reKickButt;

  @NonNull
  public final ConstraintLayout reMainLayout;

  @NonNull
  public final ConstraintLayout reMuteButton;

  @NonNull
  public final ConstraintLayout reNextButton;

  @NonNull
  public final TextView reNicknameText;

  @NonNull
  public final ConstraintLayout rePrevButton;

  @NonNull
  public final Button reRefreshButton;

  @NonNull
  public final ConstraintLayout reSlapButt;

  @NonNull
  public final ConstraintLayout reSpawnButt;

  @NonNull
  public final ConstraintLayout reStatsButton;

  @NonNull
  public final ConstraintLayout reText;

  @NonNull
  public final ConstraintLayout reUnfreezeButt;

  @NonNull
  public final ConstraintLayout reWarnButt;

  @NonNull
  public final TextView textView31;

  private AdminReconBinding(@NonNull ConstraintLayout rootView, @NonNull ConstraintLayout reBanButt,
      @NonNull Button reExitButt, @NonNull ConstraintLayout reFlipButt,
      @NonNull ConstraintLayout reFreezeButt, @NonNull TextView reIdText,
      @NonNull ConstraintLayout reJailButt, @NonNull ConstraintLayout reKickButt,
      @NonNull ConstraintLayout reMainLayout, @NonNull ConstraintLayout reMuteButton,
      @NonNull ConstraintLayout reNextButton, @NonNull TextView reNicknameText,
      @NonNull ConstraintLayout rePrevButton, @NonNull Button reRefreshButton,
      @NonNull ConstraintLayout reSlapButt, @NonNull ConstraintLayout reSpawnButt,
      @NonNull ConstraintLayout reStatsButton, @NonNull ConstraintLayout reText,
      @NonNull ConstraintLayout reUnfreezeButt, @NonNull ConstraintLayout reWarnButt,
      @NonNull TextView textView31) {
    this.rootView = rootView;
    this.reBanButt = reBanButt;
    this.reExitButt = reExitButt;
    this.reFlipButt = reFlipButt;
    this.reFreezeButt = reFreezeButt;
    this.reIdText = reIdText;
    this.reJailButt = reJailButt;
    this.reKickButt = reKickButt;
    this.reMainLayout = reMainLayout;
    this.reMuteButton = reMuteButton;
    this.reNextButton = reNextButton;
    this.reNicknameText = reNicknameText;
    this.rePrevButton = rePrevButton;
    this.reRefreshButton = reRefreshButton;
    this.reSlapButt = reSlapButt;
    this.reSpawnButt = reSpawnButt;
    this.reStatsButton = reStatsButton;
    this.reText = reText;
    this.reUnfreezeButt = reUnfreezeButt;
    this.reWarnButt = reWarnButt;
    this.textView31 = textView31;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AdminReconBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AdminReconBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.admin_recon, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AdminReconBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.re_ban_butt;
      ConstraintLayout reBanButt = ViewBindings.findChildViewById(rootView, id);
      if (reBanButt == null) {
        break missingId;
      }

      id = R.id.re_exit_butt;
      Button reExitButt = ViewBindings.findChildViewById(rootView, id);
      if (reExitButt == null) {
        break missingId;
      }

      id = R.id.re_flip_butt;
      ConstraintLayout reFlipButt = ViewBindings.findChildViewById(rootView, id);
      if (reFlipButt == null) {
        break missingId;
      }

      id = R.id.re_freeze_butt;
      ConstraintLayout reFreezeButt = ViewBindings.findChildViewById(rootView, id);
      if (reFreezeButt == null) {
        break missingId;
      }

      id = R.id.re_id_text;
      TextView reIdText = ViewBindings.findChildViewById(rootView, id);
      if (reIdText == null) {
        break missingId;
      }

      id = R.id.re_jail_butt;
      ConstraintLayout reJailButt = ViewBindings.findChildViewById(rootView, id);
      if (reJailButt == null) {
        break missingId;
      }

      id = R.id.re_kick_butt;
      ConstraintLayout reKickButt = ViewBindings.findChildViewById(rootView, id);
      if (reKickButt == null) {
        break missingId;
      }

      ConstraintLayout reMainLayout = (ConstraintLayout) rootView;

      id = R.id.re_mute_button;
      ConstraintLayout reMuteButton = ViewBindings.findChildViewById(rootView, id);
      if (reMuteButton == null) {
        break missingId;
      }

      id = R.id.re_next_button;
      ConstraintLayout reNextButton = ViewBindings.findChildViewById(rootView, id);
      if (reNextButton == null) {
        break missingId;
      }

      id = R.id.re_nickname_text;
      TextView reNicknameText = ViewBindings.findChildViewById(rootView, id);
      if (reNicknameText == null) {
        break missingId;
      }

      id = R.id.re_prev_button;
      ConstraintLayout rePrevButton = ViewBindings.findChildViewById(rootView, id);
      if (rePrevButton == null) {
        break missingId;
      }

      id = R.id.re_refresh_button;
      Button reRefreshButton = ViewBindings.findChildViewById(rootView, id);
      if (reRefreshButton == null) {
        break missingId;
      }

      id = R.id.re_slap_butt;
      ConstraintLayout reSlapButt = ViewBindings.findChildViewById(rootView, id);
      if (reSlapButt == null) {
        break missingId;
      }

      id = R.id.re_spawn_butt;
      ConstraintLayout reSpawnButt = ViewBindings.findChildViewById(rootView, id);
      if (reSpawnButt == null) {
        break missingId;
      }

      id = R.id.re_stats_button;
      ConstraintLayout reStatsButton = ViewBindings.findChildViewById(rootView, id);
      if (reStatsButton == null) {
        break missingId;
      }

      id = R.id.re_text;
      ConstraintLayout reText = ViewBindings.findChildViewById(rootView, id);
      if (reText == null) {
        break missingId;
      }

      id = R.id.re_unfreeze_butt;
      ConstraintLayout reUnfreezeButt = ViewBindings.findChildViewById(rootView, id);
      if (reUnfreezeButt == null) {
        break missingId;
      }

      id = R.id.re_warn_butt;
      ConstraintLayout reWarnButt = ViewBindings.findChildViewById(rootView, id);
      if (reWarnButt == null) {
        break missingId;
      }

      id = R.id.textView31;
      TextView textView31 = ViewBindings.findChildViewById(rootView, id);
      if (textView31 == null) {
        break missingId;
      }

      return new AdminReconBinding((ConstraintLayout) rootView, reBanButt, reExitButt, reFlipButt,
          reFreezeButt, reIdText, reJailButt, reKickButt, reMainLayout, reMuteButton, reNextButton,
          reNicknameText, rePrevButton, reRefreshButton, reSlapButt, reSpawnButt, reStatsButton,
          reText, reUnfreezeButt, reWarnButt, textView31);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
