// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class FragmentServerSelectBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView btnClose;

  @NonNull
  public final Guideline guideline26;

  @NonNull
  public final Guideline guideline27;

  @NonNull
  public final Guideline guideline28;

  @NonNull
  public final Guideline guideline33;

  @NonNull
  public final ImageView serverRecommendBackground;

  @NonNull
  public final ImageView serverRecommendCard;

  @NonNull
  public final ImageView serverRecommendImage;

  @NonNull
  public final ConstraintLayout serverRecommendLayout;

  @NonNull
  public final TextView serverRecommendName;

  @NonNull
  public final TextView serverRecommendOnline;

  @NonNull
  public final TextView serverlistCaption;

  @NonNull
  public final RecyclerView serverlistRecycler;

  @NonNull
  public final TextView textView56;

  private FragmentServerSelectBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView btnClose, @NonNull Guideline guideline26, @NonNull Guideline guideline27,
      @NonNull Guideline guideline28, @NonNull Guideline guideline33,
      @NonNull ImageView serverRecommendBackground, @NonNull ImageView serverRecommendCard,
      @NonNull ImageView serverRecommendImage, @NonNull ConstraintLayout serverRecommendLayout,
      @NonNull TextView serverRecommendName, @NonNull TextView serverRecommendOnline,
      @NonNull TextView serverlistCaption, @NonNull RecyclerView serverlistRecycler,
      @NonNull TextView textView56) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.guideline26 = guideline26;
    this.guideline27 = guideline27;
    this.guideline28 = guideline28;
    this.guideline33 = guideline33;
    this.serverRecommendBackground = serverRecommendBackground;
    this.serverRecommendCard = serverRecommendCard;
    this.serverRecommendImage = serverRecommendImage;
    this.serverRecommendLayout = serverRecommendLayout;
    this.serverRecommendName = serverRecommendName;
    this.serverRecommendOnline = serverRecommendOnline;
    this.serverlistCaption = serverlistCaption;
    this.serverlistRecycler = serverlistRecycler;
    this.textView56 = textView56;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentServerSelectBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentServerSelectBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_server_select, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentServerSelectBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageView btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.guideline26;
      Guideline guideline26 = ViewBindings.findChildViewById(rootView, id);
      if (guideline26 == null) {
        break missingId;
      }

      id = R.id.guideline27;
      Guideline guideline27 = ViewBindings.findChildViewById(rootView, id);
      if (guideline27 == null) {
        break missingId;
      }

      id = R.id.guideline28;
      Guideline guideline28 = ViewBindings.findChildViewById(rootView, id);
      if (guideline28 == null) {
        break missingId;
      }

      id = R.id.guideline33;
      Guideline guideline33 = ViewBindings.findChildViewById(rootView, id);
      if (guideline33 == null) {
        break missingId;
      }

      id = R.id.server_recommend_background;
      ImageView serverRecommendBackground = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendBackground == null) {
        break missingId;
      }

      id = R.id.server_recommend_card;
      ImageView serverRecommendCard = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendCard == null) {
        break missingId;
      }

      id = R.id.server_recommend_image;
      ImageView serverRecommendImage = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendImage == null) {
        break missingId;
      }

      id = R.id.server_recommend_layout;
      ConstraintLayout serverRecommendLayout = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendLayout == null) {
        break missingId;
      }

      id = R.id.server_recommend_name;
      TextView serverRecommendName = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendName == null) {
        break missingId;
      }

      id = R.id.server_recommend_online;
      TextView serverRecommendOnline = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendOnline == null) {
        break missingId;
      }

      id = R.id.serverlist_caption;
      TextView serverlistCaption = ViewBindings.findChildViewById(rootView, id);
      if (serverlistCaption == null) {
        break missingId;
      }

      id = R.id.serverlist_recycler;
      RecyclerView serverlistRecycler = ViewBindings.findChildViewById(rootView, id);
      if (serverlistRecycler == null) {
        break missingId;
      }

      id = R.id.textView56;
      TextView textView56 = ViewBindings.findChildViewById(rootView, id);
      if (textView56 == null) {
        break missingId;
      }

      return new FragmentServerSelectBinding((ConstraintLayout) rootView, btnClose, guideline26,
          guideline27, guideline28, guideline33, serverRecommendBackground, serverRecommendCard,
          serverRecommendImage, serverRecommendLayout, serverRecommendName, serverRecommendOnline,
          serverlistCaption, serverlistRecycler, textView56);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
