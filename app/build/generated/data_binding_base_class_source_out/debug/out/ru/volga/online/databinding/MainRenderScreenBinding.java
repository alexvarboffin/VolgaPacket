// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.SurfaceView;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.nvidia.devtech.CustomEditText;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class MainRenderScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View darkScreen;

  @NonNull
  public final DialogOldBinding dialogOld;

  @NonNull
  public final FrameLayout frontUiLayout;

  @NonNull
  public final RelativeLayout mRootFrame;

  @NonNull
  public final SurfaceView mSurfaceView;

  @NonNull
  public final Button mainButInputNext;

  @NonNull
  public final Button mainButInputPrev;

  @NonNull
  public final Button mainButInputSlash;

  @NonNull
  public final CustomEditText mainEtInput;

  @NonNull
  public final LinearLayout mainInput;

  @NonNull
  public final FrameLayout uiLayout;

  private MainRenderScreenBinding(@NonNull ConstraintLayout rootView, @NonNull View darkScreen,
      @NonNull DialogOldBinding dialogOld, @NonNull FrameLayout frontUiLayout,
      @NonNull RelativeLayout mRootFrame, @NonNull SurfaceView mSurfaceView,
      @NonNull Button mainButInputNext, @NonNull Button mainButInputPrev,
      @NonNull Button mainButInputSlash, @NonNull CustomEditText mainEtInput,
      @NonNull LinearLayout mainInput, @NonNull FrameLayout uiLayout) {
    this.rootView = rootView;
    this.darkScreen = darkScreen;
    this.dialogOld = dialogOld;
    this.frontUiLayout = frontUiLayout;
    this.mRootFrame = mRootFrame;
    this.mSurfaceView = mSurfaceView;
    this.mainButInputNext = mainButInputNext;
    this.mainButInputPrev = mainButInputPrev;
    this.mainButInputSlash = mainButInputSlash;
    this.mainEtInput = mainEtInput;
    this.mainInput = mainInput;
    this.uiLayout = uiLayout;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MainRenderScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MainRenderScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.main_render_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MainRenderScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.dark_screen;
      View darkScreen = ViewBindings.findChildViewById(rootView, id);
      if (darkScreen == null) {
        break missingId;
      }

      id = R.id.dialogOld;
      View dialogOld = ViewBindings.findChildViewById(rootView, id);
      if (dialogOld == null) {
        break missingId;
      }
      DialogOldBinding binding_dialogOld = DialogOldBinding.bind(dialogOld);

      id = R.id.front_ui_layout;
      FrameLayout frontUiLayout = ViewBindings.findChildViewById(rootView, id);
      if (frontUiLayout == null) {
        break missingId;
      }

      id = R.id.mRootFrame;
      RelativeLayout mRootFrame = ViewBindings.findChildViewById(rootView, id);
      if (mRootFrame == null) {
        break missingId;
      }

      id = R.id.mSurfaceView;
      SurfaceView mSurfaceView = ViewBindings.findChildViewById(rootView, id);
      if (mSurfaceView == null) {
        break missingId;
      }

      id = R.id.main_but_input_next;
      Button mainButInputNext = ViewBindings.findChildViewById(rootView, id);
      if (mainButInputNext == null) {
        break missingId;
      }

      id = R.id.main_but_input_prev;
      Button mainButInputPrev = ViewBindings.findChildViewById(rootView, id);
      if (mainButInputPrev == null) {
        break missingId;
      }

      id = R.id.main_but_input_slash;
      Button mainButInputSlash = ViewBindings.findChildViewById(rootView, id);
      if (mainButInputSlash == null) {
        break missingId;
      }

      id = R.id.main_et_input;
      CustomEditText mainEtInput = ViewBindings.findChildViewById(rootView, id);
      if (mainEtInput == null) {
        break missingId;
      }

      id = R.id.main_input;
      LinearLayout mainInput = ViewBindings.findChildViewById(rootView, id);
      if (mainInput == null) {
        break missingId;
      }

      id = R.id.ui_layout;
      FrameLayout uiLayout = ViewBindings.findChildViewById(rootView, id);
      if (uiLayout == null) {
        break missingId;
      }

      return new MainRenderScreenBinding((ConstraintLayout) rootView, darkScreen, binding_dialogOld,
          frontUiLayout, mRootFrame, mSurfaceView, mainButInputNext, mainButInputPrev,
          mainButInputSlash, mainEtInput, mainInput, uiLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
