// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class DialogSettingsColorBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final AppCompatButton buttonColorAmmos;

  @NonNull
  public final AppCompatButton buttonColorArmour;

  @NonNull
  public final AppCompatButton buttonColorArmourText;

  @NonNull
  public final AppCompatButton buttonColorHp;

  @NonNull
  public final AppCompatButton buttonColorHpText;

  @NonNull
  public final AppCompatButton buttonColorMoney;

  @NonNull
  public final AppCompatButton buttonColorRadar;

  @NonNull
  public final AppCompatButton buttonColorWanted;

  @NonNull
  public final LinearLayoutCompat settingsRootLayout;

  private DialogSettingsColorBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull AppCompatButton buttonColorAmmos, @NonNull AppCompatButton buttonColorArmour,
      @NonNull AppCompatButton buttonColorArmourText, @NonNull AppCompatButton buttonColorHp,
      @NonNull AppCompatButton buttonColorHpText, @NonNull AppCompatButton buttonColorMoney,
      @NonNull AppCompatButton buttonColorRadar, @NonNull AppCompatButton buttonColorWanted,
      @NonNull LinearLayoutCompat settingsRootLayout) {
    this.rootView = rootView;
    this.buttonColorAmmos = buttonColorAmmos;
    this.buttonColorArmour = buttonColorArmour;
    this.buttonColorArmourText = buttonColorArmourText;
    this.buttonColorHp = buttonColorHp;
    this.buttonColorHpText = buttonColorHpText;
    this.buttonColorMoney = buttonColorMoney;
    this.buttonColorRadar = buttonColorRadar;
    this.buttonColorWanted = buttonColorWanted;
    this.settingsRootLayout = settingsRootLayout;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSettingsColorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSettingsColorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_settings_color, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSettingsColorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_color_ammos;
      AppCompatButton buttonColorAmmos = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorAmmos == null) {
        break missingId;
      }

      id = R.id.button_color_armour;
      AppCompatButton buttonColorArmour = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorArmour == null) {
        break missingId;
      }

      id = R.id.button_color_armour_text;
      AppCompatButton buttonColorArmourText = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorArmourText == null) {
        break missingId;
      }

      id = R.id.button_color_hp;
      AppCompatButton buttonColorHp = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorHp == null) {
        break missingId;
      }

      id = R.id.button_color_hp_text;
      AppCompatButton buttonColorHpText = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorHpText == null) {
        break missingId;
      }

      id = R.id.button_color_money;
      AppCompatButton buttonColorMoney = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorMoney == null) {
        break missingId;
      }

      id = R.id.button_color_radar;
      AppCompatButton buttonColorRadar = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorRadar == null) {
        break missingId;
      }

      id = R.id.button_color_wanted;
      AppCompatButton buttonColorWanted = ViewBindings.findChildViewById(rootView, id);
      if (buttonColorWanted == null) {
        break missingId;
      }

      LinearLayoutCompat settingsRootLayout = (LinearLayoutCompat) rootView;

      return new DialogSettingsColorBinding((LinearLayoutCompat) rootView, buttonColorAmmos,
          buttonColorArmour, buttonColorArmourText, buttonColorHp, buttonColorHpText,
          buttonColorMoney, buttonColorRadar, buttonColorWanted, settingsRootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
