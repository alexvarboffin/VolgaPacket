// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.SeekBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class DialogSettingsFpsBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final SeekBar hudElementPosX10;

  @NonNull
  public final SeekBar hudElementPosX11;

  @NonNull
  public final SeekBar hudElementPosY10;

  @NonNull
  public final SeekBar hudElementPosY11;

  @NonNull
  public final SeekBar hudElementScaleY10;

  @NonNull
  public final SeekBar hudElementScaleY11;

  @NonNull
  public final LinearLayoutCompat settingsRootLayout;

  private DialogSettingsFpsBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull SeekBar hudElementPosX10, @NonNull SeekBar hudElementPosX11,
      @NonNull SeekBar hudElementPosY10, @NonNull SeekBar hudElementPosY11,
      @NonNull SeekBar hudElementScaleY10, @NonNull SeekBar hudElementScaleY11,
      @NonNull LinearLayoutCompat settingsRootLayout) {
    this.rootView = rootView;
    this.hudElementPosX10 = hudElementPosX10;
    this.hudElementPosX11 = hudElementPosX11;
    this.hudElementPosY10 = hudElementPosY10;
    this.hudElementPosY11 = hudElementPosY11;
    this.hudElementScaleY10 = hudElementScaleY10;
    this.hudElementScaleY11 = hudElementScaleY11;
    this.settingsRootLayout = settingsRootLayout;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSettingsFpsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSettingsFpsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_settings_fps, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSettingsFpsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hud_element_pos_x_10;
      SeekBar hudElementPosX10 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementPosX10 == null) {
        break missingId;
      }

      id = R.id.hud_element_pos_x_11;
      SeekBar hudElementPosX11 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementPosX11 == null) {
        break missingId;
      }

      id = R.id.hud_element_pos_y_10;
      SeekBar hudElementPosY10 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementPosY10 == null) {
        break missingId;
      }

      id = R.id.hud_element_pos_y_11;
      SeekBar hudElementPosY11 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementPosY11 == null) {
        break missingId;
      }

      id = R.id.hud_element_scale_y_10;
      SeekBar hudElementScaleY10 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementScaleY10 == null) {
        break missingId;
      }

      id = R.id.hud_element_scale_y_11;
      SeekBar hudElementScaleY11 = ViewBindings.findChildViewById(rootView, id);
      if (hudElementScaleY11 == null) {
        break missingId;
      }

      LinearLayoutCompat settingsRootLayout = (LinearLayoutCompat) rootView;

      return new DialogSettingsFpsBinding((LinearLayoutCompat) rootView, hudElementPosX10,
          hudElementPosX11, hudElementPosY10, hudElementPosY11, hudElementScaleY10,
          hudElementScaleY11, settingsRootLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
