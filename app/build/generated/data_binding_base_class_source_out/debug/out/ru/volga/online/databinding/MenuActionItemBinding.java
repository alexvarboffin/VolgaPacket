// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class MenuActionItemBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView bcgColorFill;

  @NonNull
  public final ImageView itemMenuImage;

  @NonNull
  public final TextView itemMenuNameButton;

  @NonNull
  public final RelativeLayout menuItem;

  private MenuActionItemBinding(@NonNull RelativeLayout rootView, @NonNull ImageView bcgColorFill,
      @NonNull ImageView itemMenuImage, @NonNull TextView itemMenuNameButton,
      @NonNull RelativeLayout menuItem) {
    this.rootView = rootView;
    this.bcgColorFill = bcgColorFill;
    this.itemMenuImage = itemMenuImage;
    this.itemMenuNameButton = itemMenuNameButton;
    this.menuItem = menuItem;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MenuActionItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MenuActionItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.menu_action_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MenuActionItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bcg_color_fill;
      ImageView bcgColorFill = ViewBindings.findChildViewById(rootView, id);
      if (bcgColorFill == null) {
        break missingId;
      }

      id = R.id.item_menu_image;
      ImageView itemMenuImage = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuImage == null) {
        break missingId;
      }

      id = R.id.item_menu_name_button;
      TextView itemMenuNameButton = ViewBindings.findChildViewById(rootView, id);
      if (itemMenuNameButton == null) {
        break missingId;
      }

      RelativeLayout menuItem = (RelativeLayout) rootView;

      return new MenuActionItemBinding((RelativeLayout) rootView, bcgColorFill, itemMenuImage,
          itemMenuNameButton, menuItem);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
