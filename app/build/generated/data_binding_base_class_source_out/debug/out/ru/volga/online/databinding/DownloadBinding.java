// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class DownloadBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout approveCellular;

  @NonNull
  public final LinearLayout buttonRow;

  @NonNull
  public final Button cancelButton;

  @NonNull
  public final LinearLayout downloaderDashboard;

  @NonNull
  public final LinearLayout downloaderDashboard00;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final TextView progressAsFraction;

  @NonNull
  public final TextView progressAsPercentage;

  @NonNull
  public final TextView progressAverageSpeed;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final TextView progressTimeRemaining;

  @NonNull
  public final Button resumeOverCellular;

  @NonNull
  public final TextView statusText;

  @NonNull
  public final TextView textPausedParagraph1;

  @NonNull
  public final TextView textPausedParagraph2;

  @NonNull
  public final Button wifiSettingsButton;

  private DownloadBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout approveCellular,
      @NonNull LinearLayout buttonRow, @NonNull Button cancelButton,
      @NonNull LinearLayout downloaderDashboard, @NonNull LinearLayout downloaderDashboard00,
      @NonNull Button pauseButton, @NonNull TextView progressAsFraction,
      @NonNull TextView progressAsPercentage, @NonNull TextView progressAverageSpeed,
      @NonNull ProgressBar progressBar, @NonNull TextView progressTimeRemaining,
      @NonNull Button resumeOverCellular, @NonNull TextView statusText,
      @NonNull TextView textPausedParagraph1, @NonNull TextView textPausedParagraph2,
      @NonNull Button wifiSettingsButton) {
    this.rootView = rootView;
    this.approveCellular = approveCellular;
    this.buttonRow = buttonRow;
    this.cancelButton = cancelButton;
    this.downloaderDashboard = downloaderDashboard;
    this.downloaderDashboard00 = downloaderDashboard00;
    this.pauseButton = pauseButton;
    this.progressAsFraction = progressAsFraction;
    this.progressAsPercentage = progressAsPercentage;
    this.progressAverageSpeed = progressAverageSpeed;
    this.progressBar = progressBar;
    this.progressTimeRemaining = progressTimeRemaining;
    this.resumeOverCellular = resumeOverCellular;
    this.statusText = statusText;
    this.textPausedParagraph1 = textPausedParagraph1;
    this.textPausedParagraph2 = textPausedParagraph2;
    this.wifiSettingsButton = wifiSettingsButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DownloadBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DownloadBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.download, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DownloadBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.approveCellular;
      LinearLayout approveCellular = ViewBindings.findChildViewById(rootView, id);
      if (approveCellular == null) {
        break missingId;
      }

      id = R.id.buttonRow;
      LinearLayout buttonRow = ViewBindings.findChildViewById(rootView, id);
      if (buttonRow == null) {
        break missingId;
      }

      id = R.id.cancelButton;
      Button cancelButton = ViewBindings.findChildViewById(rootView, id);
      if (cancelButton == null) {
        break missingId;
      }

      id = R.id.downloaderDashboard;
      LinearLayout downloaderDashboard = ViewBindings.findChildViewById(rootView, id);
      if (downloaderDashboard == null) {
        break missingId;
      }

      id = R.id.downloaderDashboard00;
      LinearLayout downloaderDashboard00 = ViewBindings.findChildViewById(rootView, id);
      if (downloaderDashboard00 == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.progressAsFraction;
      TextView progressAsFraction = ViewBindings.findChildViewById(rootView, id);
      if (progressAsFraction == null) {
        break missingId;
      }

      id = R.id.progressAsPercentage;
      TextView progressAsPercentage = ViewBindings.findChildViewById(rootView, id);
      if (progressAsPercentage == null) {
        break missingId;
      }

      id = R.id.progressAverageSpeed;
      TextView progressAverageSpeed = ViewBindings.findChildViewById(rootView, id);
      if (progressAverageSpeed == null) {
        break missingId;
      }

      id = R.id.progressBar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.progressTimeRemaining;
      TextView progressTimeRemaining = ViewBindings.findChildViewById(rootView, id);
      if (progressTimeRemaining == null) {
        break missingId;
      }

      id = R.id.resumeOverCellular;
      Button resumeOverCellular = ViewBindings.findChildViewById(rootView, id);
      if (resumeOverCellular == null) {
        break missingId;
      }

      id = R.id.statusText;
      TextView statusText = ViewBindings.findChildViewById(rootView, id);
      if (statusText == null) {
        break missingId;
      }

      id = R.id.textPausedParagraph1;
      TextView textPausedParagraph1 = ViewBindings.findChildViewById(rootView, id);
      if (textPausedParagraph1 == null) {
        break missingId;
      }

      id = R.id.textPausedParagraph2;
      TextView textPausedParagraph2 = ViewBindings.findChildViewById(rootView, id);
      if (textPausedParagraph2 == null) {
        break missingId;
      }

      id = R.id.wifiSettingsButton;
      Button wifiSettingsButton = ViewBindings.findChildViewById(rootView, id);
      if (wifiSettingsButton == null) {
        break missingId;
      }

      return new DownloadBinding((LinearLayout) rootView, approveCellular, buttonRow, cancelButton,
          downloaderDashboard, downloaderDashboard00, pauseButton, progressAsFraction,
          progressAsPercentage, progressAverageSpeed, progressBar, progressTimeRemaining,
          resumeOverCellular, statusText, textPausedParagraph1, textPausedParagraph2,
          wifiSettingsButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
