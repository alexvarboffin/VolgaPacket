// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class ServerlistItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout edgarCon;

  @NonNull
  public final ImageView serverItemBackground;

  @NonNull
  public final ImageView serverItemImage;

  @NonNull
  public final TextView serverItemName;

  @NonNull
  public final TextView serverItemOnline;

  @NonNull
  public final ImageView serverRecommendCard;

  @NonNull
  public final TextView serverRecommendText;

  private ServerlistItemBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout edgarCon, @NonNull ImageView serverItemBackground,
      @NonNull ImageView serverItemImage, @NonNull TextView serverItemName,
      @NonNull TextView serverItemOnline, @NonNull ImageView serverRecommendCard,
      @NonNull TextView serverRecommendText) {
    this.rootView = rootView;
    this.edgarCon = edgarCon;
    this.serverItemBackground = serverItemBackground;
    this.serverItemImage = serverItemImage;
    this.serverItemName = serverItemName;
    this.serverItemOnline = serverItemOnline;
    this.serverRecommendCard = serverRecommendCard;
    this.serverRecommendText = serverRecommendText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ServerlistItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ServerlistItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.serverlist_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ServerlistItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      ConstraintLayout edgarCon = (ConstraintLayout) rootView;

      id = R.id.server_item_background;
      ImageView serverItemBackground = ViewBindings.findChildViewById(rootView, id);
      if (serverItemBackground == null) {
        break missingId;
      }

      id = R.id.server_item_image;
      ImageView serverItemImage = ViewBindings.findChildViewById(rootView, id);
      if (serverItemImage == null) {
        break missingId;
      }

      id = R.id.server_item_name;
      TextView serverItemName = ViewBindings.findChildViewById(rootView, id);
      if (serverItemName == null) {
        break missingId;
      }

      id = R.id.server_item_online;
      TextView serverItemOnline = ViewBindings.findChildViewById(rootView, id);
      if (serverItemOnline == null) {
        break missingId;
      }

      id = R.id.server_recommend_card;
      ImageView serverRecommendCard = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendCard == null) {
        break missingId;
      }

      id = R.id.server_recommend_text;
      TextView serverRecommendText = ViewBindings.findChildViewById(rootView, id);
      if (serverRecommendText == null) {
        break missingId;
      }

      return new ServerlistItemBinding((ConstraintLayout) rootView, edgarCon, serverItemBackground,
          serverItemImage, serverItemName, serverItemOnline, serverRecommendCard,
          serverRecommendText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
