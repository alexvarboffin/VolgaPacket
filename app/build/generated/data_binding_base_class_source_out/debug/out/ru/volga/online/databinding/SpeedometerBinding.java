// Generated by view binder compiler. Do not edit!
package ru.volga.online.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.volga.online.R;

public final class SpeedometerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView fuelImage;

  @NonNull
  public final FrameLayout fuelLayout;

  @NonNull
  public final TextView fuelText;

  @NonNull
  public final FrameLayout hpLayout;

  @NonNull
  public final TextView hpText;

  @NonNull
  public final ImageView inAlarm;

  @NonNull
  public final ImageView inEngine;

  @NonNull
  public final ImageView inKey;

  @NonNull
  public final ImageView inLeft;

  @NonNull
  public final ImageView inLight;

  @NonNull
  public final ImageView inRight;

  @NonNull
  public final LinearLayout menuspeedlag;

  @NonNull
  public final TextView mileage;

  @NonNull
  public final FrameLayout speedLayout;

  @NonNull
  public final TextView speedText;

  @NonNull
  public final LinearLayout speedometrMatrpEdgar;

  @NonNull
  public final FrameLayout turnDown;

  @NonNull
  public final ImageView turnDownBg;

  @NonNull
  public final FrameLayout turnLeft;

  @NonNull
  public final ImageView turnLeftBg;

  @NonNull
  public final ImageView turnLeftBgPov;

  @NonNull
  public final FrameLayout turnLeftPov;

  @NonNull
  public final FrameLayout turnLock;

  @NonNull
  public final ImageView turnLockBg;

  @NonNull
  public final FrameLayout turnRight;

  @NonNull
  public final ImageView turnRightBg;

  @NonNull
  public final ImageView turnRightBgPov;

  @NonNull
  public final FrameLayout turnRightPov;

  @NonNull
  public final FrameLayout turnTwin;

  @NonNull
  public final ImageView turnTwinBg;

  @NonNull
  public final FrameLayout turnUp;

  @NonNull
  public final ImageView turnUpBg;

  private SpeedometerBinding(@NonNull LinearLayout rootView, @NonNull ImageView fuelImage,
      @NonNull FrameLayout fuelLayout, @NonNull TextView fuelText, @NonNull FrameLayout hpLayout,
      @NonNull TextView hpText, @NonNull ImageView inAlarm, @NonNull ImageView inEngine,
      @NonNull ImageView inKey, @NonNull ImageView inLeft, @NonNull ImageView inLight,
      @NonNull ImageView inRight, @NonNull LinearLayout menuspeedlag, @NonNull TextView mileage,
      @NonNull FrameLayout speedLayout, @NonNull TextView speedText,
      @NonNull LinearLayout speedometrMatrpEdgar, @NonNull FrameLayout turnDown,
      @NonNull ImageView turnDownBg, @NonNull FrameLayout turnLeft, @NonNull ImageView turnLeftBg,
      @NonNull ImageView turnLeftBgPov, @NonNull FrameLayout turnLeftPov,
      @NonNull FrameLayout turnLock, @NonNull ImageView turnLockBg, @NonNull FrameLayout turnRight,
      @NonNull ImageView turnRightBg, @NonNull ImageView turnRightBgPov,
      @NonNull FrameLayout turnRightPov, @NonNull FrameLayout turnTwin,
      @NonNull ImageView turnTwinBg, @NonNull FrameLayout turnUp, @NonNull ImageView turnUpBg) {
    this.rootView = rootView;
    this.fuelImage = fuelImage;
    this.fuelLayout = fuelLayout;
    this.fuelText = fuelText;
    this.hpLayout = hpLayout;
    this.hpText = hpText;
    this.inAlarm = inAlarm;
    this.inEngine = inEngine;
    this.inKey = inKey;
    this.inLeft = inLeft;
    this.inLight = inLight;
    this.inRight = inRight;
    this.menuspeedlag = menuspeedlag;
    this.mileage = mileage;
    this.speedLayout = speedLayout;
    this.speedText = speedText;
    this.speedometrMatrpEdgar = speedometrMatrpEdgar;
    this.turnDown = turnDown;
    this.turnDownBg = turnDownBg;
    this.turnLeft = turnLeft;
    this.turnLeftBg = turnLeftBg;
    this.turnLeftBgPov = turnLeftBgPov;
    this.turnLeftPov = turnLeftPov;
    this.turnLock = turnLock;
    this.turnLockBg = turnLockBg;
    this.turnRight = turnRight;
    this.turnRightBg = turnRightBg;
    this.turnRightBgPov = turnRightBgPov;
    this.turnRightPov = turnRightPov;
    this.turnTwin = turnTwin;
    this.turnTwinBg = turnTwinBg;
    this.turnUp = turnUp;
    this.turnUpBg = turnUpBg;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SpeedometerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SpeedometerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.speedometer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SpeedometerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fuel_image;
      ImageView fuelImage = ViewBindings.findChildViewById(rootView, id);
      if (fuelImage == null) {
        break missingId;
      }

      id = R.id.fuel_layout;
      FrameLayout fuelLayout = ViewBindings.findChildViewById(rootView, id);
      if (fuelLayout == null) {
        break missingId;
      }

      id = R.id.fuel_text;
      TextView fuelText = ViewBindings.findChildViewById(rootView, id);
      if (fuelText == null) {
        break missingId;
      }

      id = R.id.hp_layout;
      FrameLayout hpLayout = ViewBindings.findChildViewById(rootView, id);
      if (hpLayout == null) {
        break missingId;
      }

      id = R.id.hp_text;
      TextView hpText = ViewBindings.findChildViewById(rootView, id);
      if (hpText == null) {
        break missingId;
      }

      id = R.id.in_alarm;
      ImageView inAlarm = ViewBindings.findChildViewById(rootView, id);
      if (inAlarm == null) {
        break missingId;
      }

      id = R.id.in_engine;
      ImageView inEngine = ViewBindings.findChildViewById(rootView, id);
      if (inEngine == null) {
        break missingId;
      }

      id = R.id.in_key;
      ImageView inKey = ViewBindings.findChildViewById(rootView, id);
      if (inKey == null) {
        break missingId;
      }

      id = R.id.in_left;
      ImageView inLeft = ViewBindings.findChildViewById(rootView, id);
      if (inLeft == null) {
        break missingId;
      }

      id = R.id.in_light;
      ImageView inLight = ViewBindings.findChildViewById(rootView, id);
      if (inLight == null) {
        break missingId;
      }

      id = R.id.in_right;
      ImageView inRight = ViewBindings.findChildViewById(rootView, id);
      if (inRight == null) {
        break missingId;
      }

      id = R.id.menuspeedlag;
      LinearLayout menuspeedlag = ViewBindings.findChildViewById(rootView, id);
      if (menuspeedlag == null) {
        break missingId;
      }

      id = R.id.mileage;
      TextView mileage = ViewBindings.findChildViewById(rootView, id);
      if (mileage == null) {
        break missingId;
      }

      id = R.id.speed_layout;
      FrameLayout speedLayout = ViewBindings.findChildViewById(rootView, id);
      if (speedLayout == null) {
        break missingId;
      }

      id = R.id.speed_text;
      TextView speedText = ViewBindings.findChildViewById(rootView, id);
      if (speedText == null) {
        break missingId;
      }

      LinearLayout speedometrMatrpEdgar = (LinearLayout) rootView;

      id = R.id.turn_down;
      FrameLayout turnDown = ViewBindings.findChildViewById(rootView, id);
      if (turnDown == null) {
        break missingId;
      }

      id = R.id.turn_down_bg;
      ImageView turnDownBg = ViewBindings.findChildViewById(rootView, id);
      if (turnDownBg == null) {
        break missingId;
      }

      id = R.id.turn_left;
      FrameLayout turnLeft = ViewBindings.findChildViewById(rootView, id);
      if (turnLeft == null) {
        break missingId;
      }

      id = R.id.turn_left_bg;
      ImageView turnLeftBg = ViewBindings.findChildViewById(rootView, id);
      if (turnLeftBg == null) {
        break missingId;
      }

      id = R.id.turn_left_bg_pov;
      ImageView turnLeftBgPov = ViewBindings.findChildViewById(rootView, id);
      if (turnLeftBgPov == null) {
        break missingId;
      }

      id = R.id.turn_left_pov;
      FrameLayout turnLeftPov = ViewBindings.findChildViewById(rootView, id);
      if (turnLeftPov == null) {
        break missingId;
      }

      id = R.id.turn_lock;
      FrameLayout turnLock = ViewBindings.findChildViewById(rootView, id);
      if (turnLock == null) {
        break missingId;
      }

      id = R.id.turn_lock_bg;
      ImageView turnLockBg = ViewBindings.findChildViewById(rootView, id);
      if (turnLockBg == null) {
        break missingId;
      }

      id = R.id.turn_right;
      FrameLayout turnRight = ViewBindings.findChildViewById(rootView, id);
      if (turnRight == null) {
        break missingId;
      }

      id = R.id.turn_right_bg;
      ImageView turnRightBg = ViewBindings.findChildViewById(rootView, id);
      if (turnRightBg == null) {
        break missingId;
      }

      id = R.id.turn_right_bg_pov;
      ImageView turnRightBgPov = ViewBindings.findChildViewById(rootView, id);
      if (turnRightBgPov == null) {
        break missingId;
      }

      id = R.id.turn_right_pov;
      FrameLayout turnRightPov = ViewBindings.findChildViewById(rootView, id);
      if (turnRightPov == null) {
        break missingId;
      }

      id = R.id.turn_twin;
      FrameLayout turnTwin = ViewBindings.findChildViewById(rootView, id);
      if (turnTwin == null) {
        break missingId;
      }

      id = R.id.turn_twin_bg;
      ImageView turnTwinBg = ViewBindings.findChildViewById(rootView, id);
      if (turnTwinBg == null) {
        break missingId;
      }

      id = R.id.turn_up;
      FrameLayout turnUp = ViewBindings.findChildViewById(rootView, id);
      if (turnUp == null) {
        break missingId;
      }

      id = R.id.turn_up_bg;
      ImageView turnUpBg = ViewBindings.findChildViewById(rootView, id);
      if (turnUpBg == null) {
        break missingId;
      }

      return new SpeedometerBinding((LinearLayout) rootView, fuelImage, fuelLayout, fuelText,
          hpLayout, hpText, inAlarm, inEngine, inKey, inLeft, inLight, inRight, menuspeedlag,
          mileage, speedLayout, speedText, speedometrMatrpEdgar, turnDown, turnDownBg, turnLeft,
          turnLeftBg, turnLeftBgPov, turnLeftPov, turnLock, turnLockBg, turnRight, turnRightBg,
          turnRightBgPov, turnRightPov, turnTwin, turnTwinBg, turnUp, turnUpBg);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
